on:
  #push:
  #  branches:
  #    - master
  #    - develop
  workflow_dispatch:
jobs:
  pulumi:
    name: Pulumi up
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: infra
    outputs:
      apiUrl: ${{ steps.pulumi-up.outputs.apiUrl }}
      appDeploymentToken: ${{ steps.pulumi-up.outputs.appDeploymentToken }}
      deploymentName: ${{ steps.pulumi-up.outputs.deploymentName }}
      resourceGroupName: ${{ steps.pulumi-up.outputs.resourceGroupName }}
      env: ${{ steps.pulumi-up.outputs.env }}
      project: ${{ steps.pulumi-up.outputs.project }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: pulumi/actions@v4
        id: pulumi-up
        with:
          work-dir: infra
          command: up
          stack-name: ${{ vars.PULUMI_STACK_NAME }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
          CLOUD: azure
          ARM_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          ARM_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          ARM_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
          ARM_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  App-Build:
    name: Build App
    runs-on: ubuntu-latest
    needs: pulumi
    environment: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: app
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: npm ci
      - name: Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ needs.pulumi.outputs.appDeploymentToken }}
          action: "upload"
          output_location: "build"
          app_location: "app"
          skip_api_build: true
          app_build_command: "npm run build"
        env:
          REACT_APP_API_URL: "https://sls-weur-${{ needs.pulumi.outputs.env }}-${{ needs.pulumi.outputs.project }}.azurewebsites.net/api"
          REACT_APP_SKIP_AUTH: "SKIP"
          DISABLE_ESLINT_PLUGIN: true

  API:
    name: Deploy API
    runs-on: ubuntu-latest
    needs: pulumi
    environment: ${{ github.ref_name }}
    defaults:
      run:
        working-directory: api
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - run: npm ci
      - name: serverless deploy
        run: |
          npm run deploy
        env:
          STAGE: ${{ needs.pulumi.outputs.env }}
          PROJECT: ${{ needs.pulumi.outputs.project }}
          DEPLOYMENT_NAME: ${{ needs.pulumi.outputs.deploymentName }}
          AZURE_RESOURCE_GROUP: ${{ needs.pulumi.outputs.resourceGroupName }}
          AZURE_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
          AZURE_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
          AZURE_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}
          AZURE_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
